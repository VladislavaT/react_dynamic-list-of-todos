{"version":3,"sources":["types/Filter.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterBy","TodoItem","todo","selected","onSelect","className","classNames","id","completed","title","type","onClick","TodoList","todos","selectedTodoId","onSelectTodo","map","TodoFilter","query","filterBy","onFilterChange","onQueryChange","value","onChange","target","ALL","ACTIVE","COMPLETED","placeholder","event","length","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","onClose","useState","user","setUser","useEffect","userId","href","email","name","App","setTodos","selectedTodo","setSelectedTodo","setQuery","setFilterBy","handleSelectingTodo","useCallback","visibleTodos","useMemo","filter","isCompleted","prepsredQuery","toLowerCase","trim","preparedTitle","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.91b10541.chunk.js","sourcesContent":["export enum FilterBy {\n  ALL = 'All',\n  ACTIVE = 'Active',\n  COMPLETED = 'Completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todo: Todo,\n  selected?: number,\n  onSelect: (todo: Todo) => void,\n}\n\nexport const TodoItem: React.FC<Props> = ({ todo, selected, onSelect }) => (\n  <tr\n    key={todo.id}\n    data-cy=\"todo\"\n    className={classNames({\n      'has-background-info-light': selected,\n    })}\n  >\n    <td className=\"is-vcentered\">{todo.id}</td>\n\n    <td className=\"is-vcentered\">\n      {todo.completed && (\n        <span className=\"icon\" data-cy=\"iconCompleted\">\n          <i className=\"fas fa-check\" />\n        </span>\n      )}\n    </td>\n\n    <td className=\"is-vcentered is-expanded\">\n      <p className={classNames({\n        'has-text-success': todo.completed,\n        'has-text-danger': !todo.completed,\n      })}\n      >\n        {todo.title}\n      </p>\n    </td>\n\n    <td className=\"has-text-right is-vcentered\">\n      <button\n        data-cy=\"selectButton\"\n        className=\"button\"\n        type=\"button\"\n        onClick={() => {\n          onSelect(todo);\n        }}\n      >\n        <span className=\"icon\">\n          {selected\n            ? <i className=\"far fa-eye-slash\" />\n            : <i className=\"far fa-eye\" />}\n        </span>\n      </button>\n    </td>\n  </tr>\n);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem/TodoItem';\n\ninterface Props {\n  todos: Todo[];\n  selectedTodoId?: number;\n  onSelectTodo: (todo: Todo) => void;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodoId,\n  onSelectTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n\n        <th>Title</th>\n\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          selected={selectedTodoId}\n          onSelect={onSelectTodo}\n        />\n      ))}\n    </tbody>\n  </table>\n);\n","import { FilterBy } from '../../types/Filter';\n\ninterface Props {\n  query: string,\n  filterBy: FilterBy,\n  onFilterChange: (filterBy: FilterBy) => void,\n  onQueryChange: (query: string) => void,\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  filterBy,\n  onFilterChange,\n  onQueryChange,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={filterBy}\n          onChange={({ target }) => onFilterChange(target.value as FilterBy)}\n        >\n          <option value={FilterBy.ALL}>{FilterBy.ALL}</option>\n          <option value={FilterBy.ACTIVE}>{FilterBy.ACTIVE}</option>\n          <option value={FilterBy.COMPLETED}>{FilterBy.COMPLETED}</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => onQueryChange(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query.length > 0 && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => {\n              onQueryChange('');\n            }}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL\n  = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then((res) => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ninterface Props {\n  todo: Todo;\n  onClose: () => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({ todo, onClose }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (todo.userId) {\n      getUser(todo.userId)\n        .then(setUser);\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user\n        ? <Loader />\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${todo.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={onClose}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {todo.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {todo.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>}\n\n                {' by '}\n\n                <a href={`mailto:${user?.email}`}>\n                  {user?.name || 'Unknown user'}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, {\n  useCallback, useEffect, useState, useMemo,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Loader } from './components/Loader';\nimport { TodoModal } from './components/TodoModal';\nimport { FilterBy } from './types/Filter';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [query, setQuery] = useState('');\n  const [filterBy, setFilterBy] = useState<FilterBy>(FilterBy.ALL);\n\n  const handleSelectingTodo = useCallback((todo: Todo) => {\n    setSelectedTodo(todo);\n  }, []);\n\n  const visibleTodos = useMemo(() => {\n    return todos.filter(({ title, completed }: Todo) => {\n      const prepsredQuery = query.toLowerCase().trim();\n      const preparedTitle = title.toLowerCase();\n\n      let isCompleted;\n\n      switch (filterBy) {\n        case FilterBy.ACTIVE:\n          isCompleted = !completed;\n          break;\n\n        case FilterBy.COMPLETED:\n          isCompleted = completed;\n          break;\n\n        default:\n          isCompleted = true;\n      }\n\n      return preparedTitle.includes(prepsredQuery) && isCompleted;\n    });\n  }, [todos, query, filterBy]);\n\n  useEffect(() => {\n    getTodos()\n      .then(setTodos);\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                filterBy={filterBy}\n                onFilterChange={setFilterBy}\n                onQueryChange={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length\n                ? (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectedTodoId={selectedTodo?.id}\n                    onSelectTodo={handleSelectingTodo}\n                  />\n                )\n                : <Loader />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          onClose={() => setSelectedTodo(null)}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}